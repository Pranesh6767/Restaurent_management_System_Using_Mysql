#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 6.0
#  in conjunction with Tcl version 8.6
#    Nov 29, 2020 01:45:18 PM IST  platform: Linux

import sys
import App_RMS
import mysql.connector
from dbConnect import DBConnect
from tkinter import messagebox

hostname = 'freedb.tech'
MYSQLusername = 'freedbtech_Aniket'
MYSQLpass = 'Aniket@2000'
dbname = 'freedbtech_RMS'

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import MAINTENANCE_RMS_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Toplevel1 (root)
    MAINTENANCE_RMS_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    MAINTENANCE_RMS_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:

    def deleterow(self, id1):
        '''
        id --> integer
        '''
        mydb=mysql.connector.connect(host=hostname,user=MYSQLusername,password=MYSQLpass,database=dbname,port='3306')
        mycursor=mydb.cursor()
        query=("DELETE FROM Maintainance WHERE ID = %s" %(id1))
        mycursor.execute(query)
        mydb.commit()

    def sumofall(self):
        mydb=mysql.connector.connect(host=hostname,user=MYSQLusername,password=MYSQLpass,database=dbname,port='3306')
        mycursor=mydb.cursor()
        query = ("SELECT sum(ammount) from Maintainance")
        mycursor.execute(query)
        for(ammount) in mycursor:
            total_expences = int(ammount[0])
        return total_expences

    def insert(self, type1,ammount1):
        '''
        type1 --> str
        ammount1 --> integer
        '''
        database = DBConnect(host=hostname,user=MYSQLusername,password=MYSQLpass, database=dbname)
        new_user = {'type': type1,'ammount': ammount1}
        database.insert(new_user,'Maintainance')
        database.commit()

    def add_to_db(self):
        type1 = str(self.type_UI.get())
        ammount1 = int(self.totalexpence_UI.get())
        self.insert(type1,ammount1)
        messagebox.showinfo('RMS','Data Added')

    def delete_entry_f(self):
        idget = int(self.del_nameid_UI.get())
        self.deleterow(idget)
        messagebox.showinfo('RMS','Entry Deleted')

    def backs(self):
        root.destroy()
        App_RMS.vp_start_gui()

    def printtotal(self):
        self.Text_toatl_exp.delete(0.0,tk.END)
        totalexpences = str(self.sumofall())
        self.Text_toatl_exp.insert(1.0,totalexpences)

    def FETCHS(self):
        self.listbox_UI.delete(0,tk.END)
        mydb=mysql.connector.connect(host=hostname,user=MYSQLusername,password=MYSQLpass,database=dbname,port='3306')
        mycursor=mydb.cursor()
        query = ("SELECT ID, type, ammount FROM Maintainance")
        mycursor.execute(query)
        for(ID, type, ammount) in mycursor:
            s="     {}      {}      {}".format(ID, ammount, type)
            self.listbox_UI.insert(0,s)

    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("902x716+286+67")
        top.minsize(148, 1)
        top.maxsize(1924, 1055)
        top.resizable(1,  1)
        top.title("New Toplevel")
        top.configure(background="#ff8f59")
        top.configure(highlightcolor="black")

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.033, rely=0.042, height=46, width=222)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(font="-family {Segoe UI} -size 18 -weight bold")
        self.Label1.configure(text='''MAINTENANCE''')

        self.Frame1 = tk.Frame(top)
        self.Frame1.place(relx=0.599, rely=0.223, relheight=0.384
                , relwidth=0.382)
        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief="groove")
        self.Frame1.configure(background="#ff80ff")
        self.Frame1.configure(cursor="fleur")

        self.Label2_1 = tk.Label(self.Frame1)
        self.Label2_1.place(relx=0.348, rely=0.029, height=33, width=92)
        self.Label2_1.configure(activebackground="#f9f9f9")
        self.Label2_1.configure(background="#ff0000")
        self.Label2_1.configure(font="-family {Segoe UI} -size 17 -weight bold")
        self.Label2_1.configure(text='''ADD''')

        self.Label4_2 = tk.Label(self.Frame1)
        self.Label4_2.place(relx=0.058, rely=0.247, height=26, width=122)
        self.Label4_2.configure(activebackground="#f9f9f9")
        self.Label4_2.configure(font="-family {DejaVu Sans} -size 12 -weight bold")
        self.Label4_2.configure(text='''TYPE  :''')

        self.Label7_4 = tk.Label(self.Frame1)
        self.Label7_4.place(relx=0.058, rely=0.422, height=26, width=122)
        self.Label7_4.configure(activebackground="#f9f9f9")
        self.Label7_4.configure(cursor="fleur")
        self.Label7_4.configure(font="-family {DejaVu Sans} -size 8 -weight bold")
        self.Label7_4.configure(text='''Expected Ammount:''')

        self.submit_add_UI = tk.Button(self.Frame1)
        self.submit_add_UI.place(relx=0.319, rely=0.702, height=33, width=136)
        self.submit_add_UI.configure(background="#0000ff")
        self.submit_add_UI.configure(font="-family {Segoe UI} -size 13 -weight bold")
        self.submit_add_UI.configure(foreground="#ffffff")
        self.submit_add_UI.configure(pady="0")
        self.submit_add_UI.configure(text='''SUBMIT''',command = self.add_to_db)

        self.type_UI = tk.Entry(self.Frame1)
        self.type_UI.place(relx=0.464, rely=0.218, height=34, relwidth=0.504)
        self.type_UI.configure(background="white")
        self.type_UI.configure(font="TkFixedFont")
        self.type_UI.configure(selectbackground="blue")
        self.type_UI.configure(selectforeground="white")

        self.totalexpence_UI = tk.Entry(self.Frame1)
        self.totalexpence_UI.place(relx=0.464, rely=0.4, height=34
                , relwidth=0.504)
        self.totalexpence_UI.configure(background="white")
        self.totalexpence_UI.configure(font="TkFixedFont")
        self.totalexpence_UI.configure(selectbackground="blue")
        self.totalexpence_UI.configure(selectforeground="white")

        self.back_UI = tk.Button(top)
        self.back_UI.place(relx=0.599, rely=0.014, height=36, width=82)
        self.back_UI.configure(activebackground="#f9f9f9")
        self.back_UI.configure(background="#0080ff")
        self.back_UI.configure(font="-family {Segoe UI} -size 14 -weight bold")
        self.back_UI.configure(foreground="#ffffff")
        self.back_UI.configure(text='''BACK''',command = self.backs)

        self.fetchall_but = tk.Button(top)
        self.fetchall_but.place(relx=0.399, rely=0.1, height=36, width=82)
        self.fetchall_but.configure(activebackground="#f9f9f9")
        self.fetchall_but.configure(background="#0080ff")
        self.fetchall_but.configure(font="-family {Segoe UI} -size 14 -weight bold")
        self.fetchall_but.configure(foreground="#ffffff")
        self.fetchall_but.configure(text='''FETCH''',command = self.FETCHS)

        self.Frame2 = tk.Frame(top)
        self.Frame2.place(relx=0.599, rely=0.642, relheight=0.271
                , relwidth=0.386)
        self.Frame2.configure(relief='groove')
        self.Frame2.configure(borderwidth="2")
        self.Frame2.configure(relief="groove")
        self.Frame2.configure(background="#ff80ff")

        self.Label9 = tk.Label(self.Frame2)
        self.Label9.place(relx=0.259, rely=0.093, height=24, width=177)
        self.Label9.configure(activebackground="#f9f9f9")
        self.Label9.configure(background="#ff0000")
        self.Label9.configure(font="-family {Segoe UI} -size 15 -weight bold")
        self.Label9.configure(text='''DELETE ENTRY''')

        self.Label10 = tk.Label(self.Frame2)
        self.Label10.place(relx=0.115, rely=0.423, height=33, width=112)
        self.Label10.configure(activebackground="#f9f9f9")
        self.Label10.configure(font="-family {Segoe UI} -size 12 -weight bold")
        self.Label10.configure(text='''NAME ID :''')

        self.submit_del_UI = tk.Button(self.Frame2)
        self.submit_del_UI.place(relx=0.345, rely=0.722, height=33, width=126)
        self.submit_del_UI.configure(background="#0000ff")
        self.submit_del_UI.configure(font="-family {Segoe UI} -size 13 -weight bold")
        self.submit_del_UI.configure(foreground="#ffffff")
        self.submit_del_UI.configure(pady="0")
        self.submit_del_UI.configure(text='''SUBMIT''', command = self.delete_entry_f)

        self.del_nameid_UI = tk.Entry(self.Frame2)
        self.del_nameid_UI.place(relx=0.517, rely=0.412, height=34
                , relwidth=0.356)
        self.del_nameid_UI.configure(background="white")
        self.del_nameid_UI.configure(font="TkFixedFont")
        self.del_nameid_UI.configure(selectbackground="blue")
        self.del_nameid_UI.configure(selectforeground="white")

        self.listbox_UI = tk.Listbox(top)
        self.listbox_UI.place(relx=0.011, rely=0.251, relheight=0.708
                , relwidth=0.537)
        self.listbox_UI.configure(background="white")
        self.listbox_UI.configure(font="TkFixedFont")
        self.listbox_UI.configure(selectbackground="blue")
        self.listbox_UI.configure(selectforeground="white")

        self.Frame3 = tk.Frame(top)
        self.Frame3.place(relx=0.599, rely=0.084, relheight=0.119
                , relwidth=0.385)
        self.Frame3.configure(relief='groove')
        self.Frame3.configure(borderwidth="2")
        self.Frame3.configure(relief="groove")
        self.Frame3.configure(background="#ff80ff")
        self.Frame3.configure(cursor="fleur")

        self.toatal_exp_but = tk.Button(self.Frame3)
        self.toatal_exp_but.place(relx=0.029, rely=0.235, height=33, width=156)
        self.toatal_exp_but.configure(activebackground="#f9f9f9")
        self.toatal_exp_but.configure(background="#0000ff")
        self.toatal_exp_but.configure(font="-family {Segoe UI} -size 13 -weight bold")
        self.toatal_exp_but.configure(foreground="#ffffff")
        self.toatal_exp_but.configure(pady="0")
        self.toatal_exp_but.configure(text='''Total Expected''', command = self.printtotal)

        self.Text_toatl_exp = tk.Text(self.Frame3)
        self.Text_toatl_exp.place(relx=0.49, rely=0.235, relheight=0.4
                , relwidth=0.478)
        self.Text_toatl_exp.configure(background="#000000")
        self.Text_toatl_exp.configure(font="-family {DejaVu Sans} -size 16 -weight bold")
        self.Text_toatl_exp.configure(foreground="#14ff1c")
        self.Text_toatl_exp.configure(selectbackground="blue")
        self.Text_toatl_exp.configure(selectforeground="white")
        self.Text_toatl_exp.configure(wrap="word")

        self.Label2 = tk.Label(top)
        self.Label2.place(relx=0.022, rely=0.209, height=20, width=39)
        self.Label2.configure(background="#ff8f59")
        self.Label2.configure(font="-family {DejaVu Sans} -size 12 -weight bold")
        self.Label2.configure(text='''ID''')

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.Label2_2 = tk.Label(top)
        self.Label2_2.place(relx=0.089, rely=0.209, height=20, width=99)
        self.Label2_2.configure(activebackground="#f9f9f9")
        self.Label2_2.configure(background="#ff8f59")
        self.Label2_2.configure(cursor="fleur")
        self.Label2_2.configure(font="-family {DejaVu Sans} -size 12 -weight bold")
        self.Label2_2.configure(text='''Ammount''')

        self.Label2_4 = tk.Label(top)
        self.Label2_4.place(relx=0.299, rely=0.209, height=20, width=99)
        self.Label2_4.configure(activebackground="#f9f9f9")
        self.Label2_4.configure(background="#ff8f59")
        self.Label2_4.configure(font="-family {DejaVu Sans} -size 12 -weight bold")
        self.Label2_4.configure(text='''Type''')

if __name__ == '__main__':
    vp_start_gui()
