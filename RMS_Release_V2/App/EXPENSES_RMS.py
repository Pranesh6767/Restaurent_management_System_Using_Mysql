#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 6.0
#  in conjunction with Tcl version 8.6
#    Nov 29, 2020 01:22:15 PM IST  platform: Linux

import sys
import App_RMS
import mysql.connector
from dbConnect import DBConnect
from tkinter import messagebox

hostname = 'freedb.tech'
MYSQLusername = 'freedbtech_Aniket'
MYSQLpass = 'Aniket@2000'
dbname = 'freedbtech_RMS'

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import EXPENSES_RMS_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    top = Toplevel1 (root)
    EXPENSES_RMS_support.init(root, top)
    root.mainloop()

w = None
def create_Toplevel1(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_Toplevel1(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    top = Toplevel1 (w)
    EXPENSES_RMS_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Toplevel1():
    global w
    w.destroy()
    w = None

class Toplevel1:

    def sumofall(self):
        mydb=mysql.connector.connect(host=hostname,user=MYSQLusername,password=MYSQLpass,database=dbname,port='3306')
        mycursor=mydb.cursor()
        query = ("SELECT sum(ammount) from Expences")
        mycursor.execute(query)
        for(ammount) in mycursor:
            total_expences = int(ammount[0])
        return total_expences

    def deleterow(self, id1):
        mydb=mysql.connector.connect(host=hostname,user=MYSQLusername,password=MYSQLpass,database=dbname,port='3306')
        mycursor=mydb.cursor()
        query=("DELETE FROM Expences WHERE ID = %s" %(id1))
        mycursor.execute(query)
        mydb.commit()

    def insert(self,year1,month1,day1,type1,ammount1):
        '''
        year1 --> integer
        month1 --> integer
        day1 --> integer
        type1 --> str
        ammount1 --> integer
        '''
        database = DBConnect(host=hostname,user=MYSQLusername,password=MYSQLpass, database=dbname)
        new_user = {'year': year1,'month': month1,'day': day1,'type': type1,'ammount': ammount1}
        database.insert(new_user,'Expences')
        database.commit()

    def backs(self):
        root.destroy()
        App_RMS.vp_start_gui()

    def calculate_total_exp(self):
        self.Text_total.delete(0.0,tk.END)
        totalexpences = str(self.sumofall())
        self.Text_total.insert(1.0,totalexpences)

    def delete_entry(self):
        idget = int(self.del_ID_UI.get())
        self.deleterow(idget)
        messagebox.showinfo('RMS','Entry Deleted')

    def add_to_db(self):
        year1 = int(self.year_UI.get())
        month1 = int(self.month_UI.get())
        day1 = int(self.day_UI.get())
        type1 = str(self.type_UI.get())
        ammount1 = int(self.ammount_UI.get())
        self.insert(year1,month1,day1,type1,ammount1)
        messagebox.showinfo('RMS','Data Added')


    def select_all_data(self):
        self.listbox_UI.delete(0,tk.END)
        mydb=mysql.connector.connect(host=hostname,user=MYSQLusername,password=MYSQLpass,database=dbname,port='3306')
        mycursor=mydb.cursor()
        query = ("SELECT ID, year, month, day, type, ammount FROM Expences")
        mycursor.execute(query)
        for(ID, year, month, day, type, ammount) in mycursor:
            s=" {}      {}      {}      {}      {}      {}".format(ID, year, month, day, ammount, type)
            self.listbox_UI.insert(0,s)



    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'

        top.geometry("905x729+311+81")
        top.minsize(148, 1)
        top.maxsize(1924, 1055)
        top.resizable(1,  1)
        top.title("New Toplevel")
        top.configure(background="#80ffff")
        top.configure(highlightcolor="black")

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.011, rely=0.014, height=56, width=272)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(background="#4f9d9d")
        self.Label1.configure(font="-family {Segoe UI} -size 20 -weight bold")
        self.Label1.configure(text='''EXPENSES(In Rs.)''')

        self.Frame1 = tk.Frame(top)
        self.Frame1.place(relx=0.552, rely=0.11, relheight=0.594, relwidth=0.432)

        self.Frame1.configure(relief='groove')
        self.Frame1.configure(borderwidth="2")
        self.Frame1.configure(relief="groove")
        self.Frame1.configure(background="#808040")

        self.Label7_1 = tk.Label(self.Frame1)
        self.Label7_1.place(relx=0.077, rely=0.085, height=44, width=118)
        self.Label7_1.configure(activebackground="#f9f9f9")
        self.Label7_1.configure(background="#e1031e")
        self.Label7_1.configure(font="-family {Segoe UI} -size 18 -weight bold")
        self.Label7_1.configure(text='''ADD''')

        self.Label10_1 = tk.Label(self.Frame1)
        self.Label10_1.place(relx=0.097, rely=0.418, height=38, width=131)
        self.Label10_1.configure(activebackground="#f9f9f9")
        self.Label10_1.configure(font="-family {Segoe UI} -size 12 -weight bold")
        self.Label10_1.configure(text='''MONTH  :''')

        self.Label11_1 = tk.Label(self.Frame1)
        self.Label11_1.place(relx=0.097, rely=0.552, height=37, width=131)
        self.Label11_1.configure(activebackground="#f9f9f9")
        self.Label11_1.configure(font="-family {Segoe UI} -size 12 -weight bold")
        self.Label11_1.configure(text='''DAY No.  :''')

        self.Label11_7 = tk.Label(self.Frame1)
        self.Label11_7.place(relx=0.102, rely=0.684, height=37, width=129)
        self.Label11_7.configure(activebackground="#f9f9f9")
        self.Label11_7.configure(font="-family {Segoe UI} -size 11 -weight bold")
        self.Label11_7.configure(text='''TYPE:''')

        self.Label11_8 = tk.Label(self.Frame1)
        self.Label11_8.place(relx=0.097, rely=0.286, height=37, width=131)
        self.Label11_8.configure(activebackground="#f9f9f9")
        self.Label11_8.configure(font="-family {Segoe UI} -size 13 -weight bold")
        self.Label11_8.configure(text='''YEAR  :''')

        self.Label11_9 = tk.Label(self.Frame1)
        self.Label11_9.place(relx=0.107, rely=0.792, height=38, width=130)
        self.Label11_9.configure(activebackground="#f9f9f9")
        self.Label11_9.configure(font="-family {Segoe UI} -size 12 -weight bold")
        self.Label11_9.configure(text='''Ammount :''')

        self.submit_add_UI = tk.Button(self.Frame1)
        self.submit_add_UI.place(relx=0.332, rely=0.887, height=43, width=146)
        self.submit_add_UI.configure(background="#0000ff")
        self.submit_add_UI.configure(font="-family {Segoe UI} -size 18 -weight bold")
        self.submit_add_UI.configure(foreground="#ffffff")
        self.submit_add_UI.configure(pady="0")
        self.submit_add_UI.configure(text='''SUBMIT''',command = self.add_to_db)

        self.year_UI = tk.Entry(self.Frame1)
        self.year_UI.place(relx=0.455, rely=0.286, height=34, relwidth=0.496)
        self.year_UI.configure(background="white")
        self.year_UI.configure(cursor="fleur")
        self.year_UI.configure(font="TkFixedFont")
        self.year_UI.configure(selectbackground="blue")
        self.year_UI.configure(selectforeground="white")

        self.month_UI = tk.Entry(self.Frame1)
        self.month_UI.place(relx=0.455, rely=0.418, height=34, relwidth=0.496)
        self.month_UI.configure(background="white")
        self.month_UI.configure(font="TkFixedFont")
        self.month_UI.configure(selectbackground="blue")
        self.month_UI.configure(selectforeground="white")

        self.day_UI = tk.Entry(self.Frame1)
        self.day_UI.place(relx=0.458, rely=0.552, height=34, relwidth=0.496)
        self.day_UI.configure(background="white")
        self.day_UI.configure(font="TkFixedFont")
        self.day_UI.configure(selectbackground="blue")
        self.day_UI.configure(selectforeground="white")

        self.type_UI = tk.Entry(self.Frame1)
        self.type_UI.place(relx=0.458, rely=0.684, height=34, relwidth=0.496)
        self.type_UI.configure(background="white")
        self.type_UI.configure(font="TkFixedFont")
        self.type_UI.configure(selectbackground="blue")
        self.type_UI.configure(selectforeground="white")

        self.ammount_UI = tk.Entry(self.Frame1)
        self.ammount_UI.place(relx=0.46, rely=0.799, height=34, relwidth=0.496)
        self.ammount_UI.configure(background="white")
        self.ammount_UI.configure(font="TkFixedFont")
        self.ammount_UI.configure(selectbackground="blue")
        self.ammount_UI.configure(selectforeground="white")

        self.Button1 = tk.Button(top)
        self.Button1.place(relx=0.63, rely=0.014, height=33, width=96)
        self.Button1.configure(background="#e1031e")
        self.Button1.configure(font="-family {Segoe UI} -size 17 -weight bold")
        self.Button1.configure(pady="0")
        self.Button1.configure(text='''BACK''', command = self.backs)

        self.Frame2 = tk.Frame(top)
        self.Frame2.place(relx=0.552, rely=0.727, relheight=0.239
                , relwidth=0.432)
        self.Frame2.configure(relief='groove')
        self.Frame2.configure(borderwidth="2")
        self.Frame2.configure(relief="groove")
        self.Frame2.configure(background="#808040")

        self.Label7_15 = tk.Label(self.Frame2)
        self.Label7_15.place(relx=0.028, rely=0.063, height=38, width=153)
        self.Label7_15.configure(activebackground="#f9f9f9")
        self.Label7_15.configure(background="#e1031e")
        self.Label7_15.configure(font="-family {Segoe UI} -size 18 -weight bold")
        self.Label7_15.configure(text='''DELETE''')

        self.Label8_16 = tk.Label(self.Frame2)
        self.Label8_16.place(relx=0.082, rely=0.425, height=42, width=124)
        self.Label8_16.configure(activebackground="#f9f9f9")
        self.Label8_16.configure(font="-family {Segoe UI} -size 13 -weight bold")
        self.Label8_16.configure(text='''ID  :''')

        self.del_ID_UI = tk.Entry(self.Frame2)
        self.del_ID_UI.place(relx=0.44, rely=0.425, height=34, relwidth=0.496)
        self.del_ID_UI.configure(background="white")
        self.del_ID_UI.configure(font="TkFixedFont")
        self.del_ID_UI.configure(selectbackground="blue")
        self.del_ID_UI.configure(selectforeground="white")

        self.submit_del_UI = tk.Button(self.Frame2)
        self.submit_del_UI.place(relx=0.332, rely=0.69, height=43, width=156)
        self.submit_del_UI.configure(background="#0000ff")
        self.submit_del_UI.configure(font="-family {Segoe UI} -size 18 -weight bold")
        self.submit_del_UI.configure(foreground="#ffffff")
        self.submit_del_UI.configure(pady="0")
        self.submit_del_UI.configure(text='''SUBMIT''', command = self.delete_entry)

        self.listbox_UI = tk.Listbox(top)
        self.listbox_UI.place(relx=0.022, rely=0.233, relheight=0.642
                , relwidth=0.502)
        self.listbox_UI.configure(background="white")
        self.listbox_UI.configure(cursor="fleur")
        self.listbox_UI.configure(font="TkFixedFont")
        self.listbox_UI.configure(selectbackground="blue")
        self.listbox_UI.configure(selectforeground="white")

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

        self.Label2 = tk.Label(top)
        self.Label2.place(relx=0.033, rely=0.192, height=21, width=39)
        self.Label2.configure(background="#80ffff")
        self.Label2.configure(font="-family {DejaVu Sans} -size 12 -weight bold")
        self.Label2.configure(text='''ID''')

        self.Label2_1 = tk.Label(top)
        self.Label2_1.place(relx=0.077, rely=0.192, height=21, width=49)
        self.Label2_1.configure(activebackground="#f9f9f9")
        self.Label2_1.configure(background="#80ffff")
        self.Label2_1.configure(cursor="fleur")
        self.Label2_1.configure(font="-family {DejaVu Sans} -size 12 -weight bold")
        self.Label2_1.configure(text='''Year''')

        self.Label2_1_1 = tk.Label(top)
        self.Label2_1_1.place(relx=0.133, rely=0.192, height=21, width=69)
        self.Label2_1_1.configure(activebackground="#f9f9f9")
        self.Label2_1_1.configure(background="#80ffff")
        self.Label2_1_1.configure(cursor="fleur")
        self.Label2_1_1.configure(font="-family {DejaVu Sans} -size 12 -weight bold")
        self.Label2_1_1.configure(text='''Month''')

        self.Label2_1_1_1 = tk.Label(top)
        self.Label2_1_1_1.place(relx=0.21, rely=0.192, height=21, width=59)
        self.Label2_1_1_1.configure(activebackground="#f9f9f9")
        self.Label2_1_1_1.configure(background="#80ffff")
        self.Label2_1_1_1.configure(cursor="fleur")
        self.Label2_1_1_1.configure(font="-family {DejaVu Sans} -size 12 -weight bold")
        self.Label2_1_1_1.configure(text='''Day''')

        self.Label2_1_1_1_1 = tk.Label(top)
        self.Label2_1_1_1_1.place(relx=0.276, rely=0.192, height=21, width=88)
        self.Label2_1_1_1_1.configure(activebackground="#f9f9f9")
        self.Label2_1_1_1_1.configure(background="#80ffff")
        self.Label2_1_1_1_1.configure(cursor="fleur")
        self.Label2_1_1_1_1.configure(font="-family {DejaVu Sans} -size 12 -weight bold")
        self.Label2_1_1_1_1.configure(text='''Ammount''')

        self.Label2_1_1_1_2 = tk.Label(top)
        self.Label2_1_1_1_2.place(relx=0.409, rely=0.192, height=21, width=59)
        self.Label2_1_1_1_2.configure(activebackground="#f9f9f9")
        self.Label2_1_1_1_2.configure(background="#80ffff")
        self.Label2_1_1_1_2.configure(font="-family {DejaVu Sans} -size 12 -weight bold")
        self.Label2_1_1_1_2.configure(text='''Type''')

        self.total_exp_but = tk.Button(top)
        self.total_exp_but.place(relx=0.044, rely=0.11, height=33, width=126)
        self.total_exp_but.configure(activebackground="#f9f9f9")
        self.total_exp_but.configure(background="#0000ff")
        self.total_exp_but.configure(cursor="fleur")
        self.total_exp_but.configure(font="-family {DejaVu Sans} -size 13 -weight bold")
        self.total_exp_but.configure(foreground="#ffffff")
        self.total_exp_but.configure(pady="0")
        self.total_exp_but.configure(text='''TOTAL EXP''',command = self.calculate_total_exp)

        self.fetchall_but = tk.Button(top)
        self.fetchall_but.place(relx=0.044, rely=0.9, height=33, width=126)
        self.fetchall_but.configure(activebackground="#f9f9f9")
        self.fetchall_but.configure(background="#0000ff")
        self.fetchall_but.configure(cursor="fleur")
        self.fetchall_but.configure(font="-family {DejaVu Sans} -size 13 -weight bold")
        self.fetchall_but.configure(foreground="#ffffff")
        self.fetchall_but.configure(pady="0")
        self.fetchall_but.configure(text='''FETCH ALL''',command = self.select_all_data)

        self.Text_total = tk.Text(top)
        self.Text_total.place(relx=0.21, rely=0.11, relheight=0.048
                , relwidth=0.217)
        self.Text_total.configure(background="#020202")
        self.Text_total.configure(cursor="fleur")
        self.Text_total.configure(font="-family {DejaVu Sans} -size 18 -weight bold")
        self.Text_total.configure(foreground="#43ff26")
        self.Text_total.configure(selectbackground="blue")
        self.Text_total.configure(selectforeground="white")
        self.Text_total.configure(wrap="word")

if __name__ == '__main__':
    vp_start_gui()
